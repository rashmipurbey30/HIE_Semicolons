@model VirtualHIE.Models.PatientTreatmentDetail

@{
    ViewBag.Title = "Create";
}

<script src="~/ckeditor/ckeditor.js"></script>
<script src="~/ckeditor/adapters/jquery.js"></script>


<div class="hie-headerWrapper">
    <div class="hie-headerContainer">

        <h2>Upload Patient Data</h2>
    </div>
</div>

<script type="text/javascript">
    function fileCheck(obj) {
        var fileExtension = ['jpeg', 'jpg', 'png', 'gif', 'bmp'];
        if ($.inArray($(obj).val().split('.').pop().toLowerCase(), fileExtension) == -1) {
            alert("Only '.jpeg','.jpg', '.png', '.gif', '.bmp' formats are allowed.");
        }
    }
</script>

<div class="hie-containerTop">
    @using (Html.BeginForm("Createdata", "PatientTreatmentDetail", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.PatientId)

            @if (Session["UserId"] != null && Session["UserId"].ToString().Trim() == "HIE_Admin")
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.HospitalId, "Hospital Name", new { @class = "control-label col-md-2" })
                    <div>
                        @Html.DropDownList("HospitalId", String.Empty)
                        @Html.ValidationMessageFor(model => model.HospitalId)
                    </div>
                </div>
            }
            <div class="form-group">
                @Html.LabelFor(model => model.Patient.AadharId, new { @class = "control-label col-md-2" })
                <div>
                    @Html.DisplayFor(model => model.Patient.AadharId)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Patient.FirstName, new { @class = "control-label col-md-2" })
                <div>
                    @Html.DisplayFor(model => model.Patient.FirstName)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Patient.LastName, new { @class = "control-label col-md-2" })
                <div>
                    @Html.DisplayFor(model => model.Patient.LastName)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Patient.DateOfBirth, new { @class = "control-label col-md-2" })
                <div>
                    @Html.DisplayFor(model => model.Patient.DateOfBirth)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Patient.MobileNumber, new { @class = "control-label col-md-2" })
                <div>
                    @Html.DisplayFor(model => model.Patient.MobileNumber)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Patient.EmailId, new { @class = "control-label col-md-2" })
                <div>
                    @Html.DisplayFor(model => model.Patient.EmailId)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.TreatmentDetails, new { @class = "control-label col-md-2" })
                <div>
                    @Html.TextAreaFor(model => model.TreatmentDetails, new { @class = "ckeditor", placeholder = "Content" })
                    @Html.ValidationMessageFor(model => model.TreatmentDetails)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Files, new { @class = "control-label col-md-2" })
                <div>
                    <input type="file" name="ImageData" id="ImageData" onchange="fileCheck(this);" />
                    @Html.ValidationMessageFor(model => model.Files)
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.CreatedOn, new { @class = "control-label col-md-2" })
                <div>
                    @Html.EditorFor(model => model.CreatedOn)
                    @Html.ValidationMessageFor(model => model.CreatedOn)
                </div>
            </div>

            <div class="form-group" style="visibility:hidden">
                @Html.LabelFor(model => model.CreatedBy, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.Editor("1");
                    @Html.ValidationMessageFor(model => model.CreatedBy)
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Upload" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    @if (Session["UserId"] != null && Session["UserId"].ToString().Trim() == "HIE_Admin")
    {
        <div>
            @Html.ActionLink("Back to Home", "AdminHome", "HIEAdmin")
        </div>
    }
    else
    {
        <div>
            @Html.ActionLink("Back to Home", "HospitalHome", "HospitalAdmin")
        </div>
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

